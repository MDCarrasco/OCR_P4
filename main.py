"""needs MVC imports"""
from controller import Controller
from model import Gender
from model import TimeControl
from model import Tournament
from model import Player
from model import Round
from model import TournamentCarrier
from model import PlayerCarrier
from view import View
import tinydb_backend

if __name__ == '__main__':

    # TODO 08/01/21
    # Create instances of tournament and player
    # test all functions with this main
    # check for bugs (there will be for sure)

    # matches should be generated by the program
    my_matches = [
        {}
    ]

    my_rounds = [
        Round("round1", "21/21/21", "21/21/21", my_matches),
        Round("round2", "21/21/21", "21/21/21", my_matches),
        Round("round3", "21/21/21", "21/21/21", my_matches),
        Round("round4", "21/21/21", "21/21/21", my_matches)
    ]

    my_players = [
        Player("Carrasco", "Michael", "23/12/1992", Gender.MALE, 299),
        Player("Myers", "Michael", "25/05/1963", Gender.MALE, 23),
        Player("Weaver", "Susan", "08/08/1949", Gender.FEMALE, 53),
        Player("Tobia", "Jacob", "07/06/1991", Gender.OTHER, 156),
        Player("Kasparof", "Garry", "13/04/1963", Gender.MALE, 2),
        Player("Carlsen", "Magnus", "30/11/1990", Gender.MALE, 1),
        Player("Polgar", "Judit", "23/07/1976", Gender.FEMALE, 5),
        Player("Brunson", "Doyle", "10/08/1933", Gender.MALE, 198),
        Player("Vachier-Lagrave", "Maxime", "21/10/1990", Gender.MALE, 10),
        Player("Scharzenegger", "Arnold", "30/07/1947", Gender.MALE, 78)
    ]

    my_tournament = [
        Tournament(
            "Le grand jeu",
            "5 avenue Victor Hugo",
            "23/12/2021",
            my_rounds,
            my_players,
            TimeControl.BLITZ,
            "C'est le plus gros tournoi d'echecs du monde !")
    ]

    c = Controller(TournamentCarrier(my_tournament),
                   PlayerCarrier(my_players), View())
    c.show_items()
    #c.show_items(bullet_points=True)
    #c.show_item('Le grand jeu')
    #c.show_item('Carrasco')

    #c.insert_item('bread', price=1.0, quantity=5)
    #c.insert_item('chocolate', price=2.0, quantity=10)
    #c.show_item('chocolate')

    #c.update_item('milk', price=1.2, quantity=20)
    #c.update_item('ice cream', price=3.5, quantity=20)

    #c.show_items()

    # we close the current sqlite database connection explicitly
    if isinstance(c.models[0], TournamentCarrier):
        tinydb_backend.disconnect_from_db(c.models[0].connection)
        # the sqlite backend understands that it needs to open a new connection
        c.show_items()
        tinydb_backend.disconnect_from_db(c.models[0].connection)
    # we close the current sqlite database connection explicitly
    if isinstance(c.models[1], PlayerCarrier):
        tinydb_backend.disconnect_from_db(c.models[1].connection)
        # the sqlite backend understands that it needs to open a new connection
        c.show_items()
        tinydb_backend.disconnect_from_db(c.models[1].connection)
